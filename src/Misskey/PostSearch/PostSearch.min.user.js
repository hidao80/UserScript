// ==UserScript==
// @name         Misskey v11 Post Log Search
// @name:ja      Misskey v11 投稿ログ検索
// @namespace    https://github.com/hidao80
// @version      1.1.0
// @description  Search through Misskey v11 posts via API
// @description:ja Misskey v11の投稿をAPI経由で検索
// @icon         https://cdn.jsdelivr.net/gh/twitter/twemoji@latest/assets/72x72/1f50d.png
// @author       hidao80
// @match        https://misskey.dev/*
// @grant        GM_xmlhttpRequest
// @run-at       document-end
// @updateURL    https://github.com/hidao80/UserScript/raw/main/src/Misskey/PostSearch/PostSearch.user.js
// @downloadURL  https://github.com/hidao80/UserScript/raw/main/src/Misskey/PostSearch/PostSearch.min.user.js
// ==/UserScript==
"use strict";(e=>{const n=!false;const t="MissQueryUS";const o={};["log","debug","warn","info","error"].forEach((e=>{o[e]=n?window.console[e]:function(){}}));const r=e=>document.createElement(e);const i=e=>document.querySelector(e);const s=e=>document.querySelectorAll(e);const a=Array.from(t).reduce(((e,n)=>(e<<5)-e+n.charCodeAt(0)),0).toString(16);const l=e=>{const n=document.querySelectorAll(e);return 1==n.length?n[0]:n};o.debug(`[${t}]: Script Loading... [HASH = ${a}]`);function d(){const e=i(`#${t}-search`);if(e){o.debug(`[${t}]: Search interface already exists`);return}const n=localStorage.getItem("vuex");const s=n?JSON.parse(n).i:null;if(!s){o.debug(`[${t}]: No API token found`);return}const a=new URL(location.href);const l=`${a.protocol}//${a.hostname}`;try{const d=r("div");d.id=`${t}-search`;d.style.cssText=`\n                position: fixed;\n                top: 10px;\n                right: 10px;\n                background: white;\n                padding: 10px;\n                border-radius: 8px;\n                box-shadow: 0 2px 10px rgba(0,0,0,0.1);\n                z-index: 5020;\n                font-family: sans-serif;\n                max-width: calc(100% - 20px);\n                box-sizing: border-box;\n                opacity: 1;\n                transition: all 0.3s ease;\n                display: none;\n            `;const p=r("style");p.textContent=`\n                .spinner-overlay {\n                    position: absolute;\n                    top: 0;\n                    left: 0;\n                    right: 0;\n                    bottom: 0;\n                    background: rgba(0, 0, 0, 0.2);\n                    display: none;\n                    justify-content: center;\n                    align-items: center;\n                    z-index: 5021;\n                    border-radius: 8px;\n                    backdrop-filter: blur(1px);\n                }\n                .spinner {\n                    width: 40px;\n                    height: 40px;\n                    border: 4px solid #f3f3f3;\n                    border-top: 4px solid #3498db;\n                    border-radius: 50%;\n                    animation: spin 1s linear infinite;\n                }\n                @keyframes spin {\n                    0% { transform: rotate(0deg); }\n                    100% { transform: rotate(360deg); }\n                }\n            `;document.head.appendChild(p);const u=r("div");u.className="spinner-overlay";u.innerHTML='<div class="spinner"></div>';d.appendChild(u);const g=500;let h=null;let x=false;let f,y;const b=10;const m=r("input");m.type="text";m.placeholder="投稿を検索...";m.style.cssText=`\n                width: 100%;\n                padding: 8px;\n                margin-bottom: 10px;\n                border: 1px solid #ccc;\n                border-radius: 4px;\n                box-sizing: border-box;\n                font-size: 14px;\n                transition: all 0.3s ease;\n            `;const v=r("div");v.style.cssText=`\n                width: 100%;\n                margin-bottom: 10px;\n                display: flex;\n                gap: 8px;\n            `;const w=r("input");w.type="text";w.placeholder="JSON ファイルの URL（任意）...";w.style.cssText=`\n                flex-grow: 1;\n                height: 36px;\n                padding: 8px;\n                border: 1px solid #ccc;\n                border-radius: 4px;\n                box-sizing: border-box;\n                font-size: 14px;\n                background: white;\n                margin: 0;\n            `;const S=r("button");S.textContent="非表示";S.style.cssText=`\n                padding: 0 12px;\n                height: 36px;\n                border: 1px solid #ccc;\n                border-radius: 4px;\n                background: white;\n                cursor: pointer;\n                font-size: 14px;\n                white-space: nowrap;\n                transition: all 0.2s ease;\n            `;S.addEventListener("mouseenter",(()=>{S.style.backgroundColor="#f0f0f0"}));S.addEventListener("mouseleave",(()=>{S.style.backgroundColor="white"}));S.addEventListener("click",(e=>{e.stopPropagation();const n=!w.disabled;w.disabled=n;if(n){w.value="";S.textContent="表示";w.style.backgroundColor="#f5f5f5";w.style.color="#999"}else{S.textContent="非表示";w.style.backgroundColor="white";w.style.color="black";const e=localStorage.getItem(`${t}-jsonUrl`);if(e){w.value=e}}}));const L=localStorage.getItem(`${t}-jsonUrl`);if(L){w.value=L}w.addEventListener("change",(()=>{const e=w.value.trim();if(e&&!w.disabled){localStorage.setItem(`${t}-jsonUrl`,e);o.debug(`[${t}]: Saved JSON URL to localStorage`)}else{localStorage.removeItem(`${t}-jsonUrl`);o.debug(`[${t}]: Removed JSON URL from localStorage`)}}));const $=r("button");$.type="button";$.innerHTML=`\n                <svg width="24" height="24" viewBox="0 0 24 24" fill="currentColor">\n                    <path d="M12 2C6.48 2 2 6.48 2 12s4.48 10 10 10 10-4.48 10-10S17.52 2 12 2zm1 17h-2v-2h2v2zm2.07-7.75l-.9.92C13.45 12.9 13 13.5 13 15h-2v-.5c0-1.1.45-2.1 1.17-2.83l1.24-1.26c.37-.36.59-.86.59-1.41 0-1.1-.9-2-2-2s-2 .9-2 2H8c0-2.21 1.79-4 4-4s4 1.79 4 4c0 .88-.36 1.68-.93 2.25z"/>\n                </svg>`;$.style.cssText=`\n                cursor: pointer;\n                flex-shrink: 0;\n                color: #666;\n                padding: 6px;\n                border-radius: 4px;\n                transition: all 0.2s ease;\n                height: 36px;\n                width: 36px;\n                display: flex;\n                align-items: center;\n                justify-content: center;\n                box-sizing: border-box;\n                border: 1px solid #ccc;\n                background: white;\n            `;$.addEventListener("mouseenter",(()=>{$.style.backgroundColor="#f0f0f0"}));$.addEventListener("mouseleave",(()=>{$.style.backgroundColor="white"}));const k=r("div");k.id=`${t}-help-modal`;k.style.cssText=`\n                display: none;\n                position: fixed;\n                top: 0;\n                left: 0;\n                width: 100dvw;\n                height: 100dvh;\n                background: rgba(0, 0, 0, 0.7);\n                z-index: 5050;\n                opacity: 0;\n                transition: opacity 0.3s ease;\n            `;const C=r("div");C.style.cssText=`\n                position: relative;\n                width: 90%;\n                max-width: 90%;\n                margin: 40px auto;\n                max-height: 90%;\n                height: auto;\n                background: white;\n                padding: 20px;\n                border-radius: 8px;\n                box-shadow: 0 2px 10px rgba(0,0,0,0.1);\n                transform: translateY(-20px);\n                transition: transform 0.3s ease;\n                overflow-y: scroll;\n            `;C.innerHTML=`\n                <h2 style="margin-top: 0; margin-bottom: 20px; color: #333;">投稿検索の使い方</h2>\n                <div style="color: #666; line-height: 1.6;">\n                    <h3 style="color: #333; margin: 16px 0 8px;">検索インターフェースの表示</h3>\n                    <p>ページ上の任意の場所をロングタップ（マウスの場合は長押し）すると、検索インターフェースの表示/非表示を切り替えられます。</p>\n\n                    <h3 style="color: #333; margin: 16px 0 8px;">JSONファイルの設定</h3>\n                    <ol>\n                        <li>投稿をJSONファイルとしてエクスポートし、アクセス可能な場所にホストします。Misskey内の自分のストレージ内でも構いません。</li>\n                        <li>入力フィールドにJSONファイルのURLを入力します</li>\n                        <li>URLは自動的に保存され、次回以降も使用できます</li>\n                    </ol>\n                    <h3 style="color: #333; margin: 16px 0 8px;">JSONフォーマット</h3>\n                    <p>JSONファイルは以下の構造を持つ投稿オブジェクトの配列である必要があります：</p>\n                    <pre style="background: #f5f5f5; padding: 10px; border-radius: 4px; overflow-x: auto;">[\n    {\n        "text": "投稿内容",\n        "createdAt": "2023-01-01T00:00:00.000Z"\n    },\n    ...\n]</pre>\n\n                    <h3 style="color: #333; margin: 16px 0 8px;">投稿の検索</h3>\n                    <ol>\n                    <li>検索ボックスに検索キーワードを入力します</li>\n                    <li>Enterキーを入力すると検索が始まります</li>\n                    <li>結果は日付の降順で表示されます</li>\n                    </ol>\n                    <h3 style="color: #333; margin: 16px 0 8px;">URL入力オプション</h3>\n                    <p>非表示/表示ボタンを使用して、URL入力を一時的に無効にできます</p>\n                </div>\n                <button style="\n                    position: absolute;\n                    top: 10px;\n                    right: 10px;\n                    background: none;\n                    border: none;\n                    font-size: 24px;\n                    cursor: pointer;\n                    color: #666;\n                    padding: 5px;\n                    line-height: 1;\n                ">×</button>\n            `;const E=C.querySelector("button");E.addEventListener("click",(e=>{e.stopPropagation();k.style.opacity="0";C.style.transform="translateY(-20px)";setTimeout((()=>{k.style.display="none"}),300)}));const T=e=>{e.preventDefault();e.stopPropagation();k.style.display="block";requestAnimationFrame((()=>{k.style.opacity="1";C.style.transform="translateY(0)"}))};$.onclick=T;k.addEventListener("click",(e=>{if(e.target===k){E.click()}}));k.appendChild(C);d.style.width="300px";v.appendChild(w);v.appendChild(S);v.appendChild($);const N=r("div");N.style.cssText=`\n                max-height: 400px;\n                overflow-y: auto;\n                font-size: 14px;\n                width: 100%;\n                box-sizing: border-box;\n                transition: all 0.3s ease;\n            `;d.appendChild(v);d.appendChild(m);d.appendChild(N);document.body.appendChild(d);document.body.appendChild(k);document.addEventListener("mousedown",O);document.addEventListener("mouseup",J);document.addEventListener("touchstart",z,{passive:true});document.addEventListener("touchend",J,{passive:true});document.addEventListener("touchcancel",J,{passive:true});function O(e){if(e.button!==0)return;if(d.contains(e.target))return;x=true;f=e.clientX;y=e.clientY;h=setTimeout((()=>{if(x){const e=d.style.display==="none";d.style.display=e?"block":"none";o.debug(`[${t}]: Display toggled to ${e?"show":"hide"}`);if(e){m.focus()}}}),g)}function J(){clearTimeout(h);x=false}function z(e){if(d.contains(e.target))return;x=true;const n=e.touches[0];f=n.clientX;y=n.clientY;h=setTimeout((()=>{if(x){const e=d.style.display==="none";d.style.display=e?"block":"none";o.debug(`[${t}]: Display toggled to ${e?"show":"hide"}`);if(e){m.focus()}}}),g)}async function A(e){if(!e){N.innerHTML="";return}u.style.display="flex";try{o.debug(`[${t}]: Searching for: ${e}`);let n=null;const r=localStorage.getItem(`${t}-jsonUrl`);if(r){try{const e=await c(r);try{if(e.startsWith("<!DOCTYPE html>")||e.startsWith("<html>")){throw new Error("HTMLファイルが指定されています。JSONファイルを指定してください。")}n=JSON.parse(e);if(typeof n!=="object"){throw new Error("不正なJSONフォーマットです")}}catch(e){o.error(`[${t}]: JSON parse error:`,e);throw new Error("JSONファイルのパースに失敗しました。有効なJSONファイルを指定してください。")}o.debug(`[${t}]: Loaded and validated JSON data from URL`)}catch(e){o.error(`[${t}]: Error loading JSON:`,e);N.innerHTML=`<div style="color: red;">JSONの読み込みエラー: ${e.message}</div>`;return}}if(!n){throw new Error("検索するJSONファイルのURLを指定してください")}if(!Array.isArray(n)){throw new Error("JSONファイルは投稿データの配列である必要があります")}const i=n.filter((n=>{if(!n.text)return false;o.debug(`[${t}]: createdAt: ${n.createdAt}, localTime: ${new Date(n.createdAt).toLocaleString()}`);return n.text.toLowerCase().includes(e.toLowerCase())||new Date(n.createdAt).toLocaleString().toLowerCase().includes(e.toLowerCase())})).sort(((e,n)=>new Date(n.createdAt)-new Date(e.createdAt)));o.debug(`[${t}]: Found ${i.length} results`);N.innerHTML=i.map((e=>`\n                        <div style="margin-bottom: 10px; padding: 8px; border: 1px solid #eee; border-radius: 4px; background: white;">\n                            <div style="margin-bottom: 5px; color: #666; font-size: 12px;">\n                                ${new Date(e.createdAt).toLocaleString()}\n                            </div>\n                            <div style="white-space: pre-wrap; word-break: break-all;">${e.text||""}</div>\n                        </div>\n                    `)).join("");if(i.length===0){N.innerHTML='<div style="color: #666;">検索結果がありません</div>'}}catch(e){o.error(`[${t}]: Error searching posts:`,e);N.innerHTML=`<div style="color: red;">エラー: ${e.message}</div>`}finally{u.style.display="none"}o.debug(`[${t}]: Search interface initialized`)}m.addEventListener("keydown",(async e=>{if(e.key==="Enter"){await A(e.target.value)}}));m.addEventListener("search",(async e=>{await A(e.target.value)}));o.debug(`[${t}]: Search interface initialized`)}catch(U){o.error(`[${t}]: Script error:`,U)}}function c(e){return new Promise(((n,t)=>{GM_xmlhttpRequest({method:"GET",url:e,onload:e=>{if(e.status===200){n(e.responseText)}else{t(new Error(`ファイルの読み込みに失敗しました: ${e.status}`))}},onerror:()=>t(new Error("ファイルの読み込み中にエラーが発生しました"))})}))}setTimeout((()=>{d()}),3e3)})();
