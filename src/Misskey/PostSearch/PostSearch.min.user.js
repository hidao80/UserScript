// ==UserScript==
// @name         Misskey v11 Post Log Search
// @name:ja      Misskey v11 投稿ログ検索
// @namespace    https://github.com/hidao80
// @version      1.0.1
// @description  Search through Misskey v11 posts via API
// @description:ja Misskey v11の投稿をAPI経由で検索
// @icon         https://cdn.jsdelivr.net/gh/twitter/twemoji@latest/assets/72x72/1f50d.png
// @author       hidao80
// @match        https://misskey.dev/*
// @grant        GM_xmlhttpRequest
// @run-at       document-end
// @updateURL    https://github.com/hidao80/UserScript/raw/main/src/Misskey/PostSearch/PostSearch.user.js
// @downloadURL  https://github.com/hidao80/UserScript/raw/main/src/Misskey/PostSearch/PostSearch.min.user.js
// ==/UserScript==
// (function(){const e=!false;const n="MissQueryUS";const t={};["log","debug","warn","info","error"].forEach((n=>{t[n]=e?window.console[n]:function(){}}));const o=e=>document.createElement(e);const r=e=>document.querySelector(e);const i=e=>document.querySelectorAll(e);const s=Array.from(n).reduce(((e,n)=>(e<<5)-e+n.charCodeAt(0)),0).toString(16);const a=e=>{const n=document.querySelectorAll(e);return 1==n.length?n[0]:n};t.debug(`[${n}]: Script Loading... [HASH = ${s}]`);function l(){if(r(`#${n}-search`)){t.debug(`[${n}]: Search interface already exists`);return}const e=localStorage.getItem("vuex");const i=e?JSON.parse(e).i:null;if(!i){t.debug(`[${n}]: No API token found`);return}const s="https://misskey.dev";try{const d=o("div");d.id=`${n}-search`;d.style.cssText=`\n                position: fixed;\n                top: 10px;\n                right: 10px;\n                background: white;\n                padding: 10px;\n                border-radius: 8px;\n                box-shadow: 0 2px 10px rgba(0,0,0,0.1);\n                z-index: 5020;\n                font-family: sans-serif;\n                max-width: calc(100% - 20px);\n                box-sizing: border-box;\n                opacity: 0.9;\n                transition: all 0.3s ease;\n                display: none;\n            `;let p=0;let u=0;const x=500;document.addEventListener("click",(e=>{if(d.contains(e.target)){return}const n=(new Date).getTime();const t=n-p;if(t<x){u++;if(u===3){d.style.display=d.style.display==="none"?"block":"none";if(d.style.display==="block"){L.focus()}u=0}}else{u=1}p=n}));d.addEventListener("mouseenter",(()=>{d.style.opacity="1"}));d.addEventListener("mouseleave",(()=>{d.style.opacity="0.9"}));const g=o("div");g.style.cssText=`\n                width: 100%;\n                margin-bottom: 10px;\n                display: flex;\n                gap: 8px;\n            `;const h=o("input");h.type="text";h.placeholder="JSON ファイルの URL（任意）...";h.style.cssText=`\n                flex-grow: 1;\n                height: 36px;\n                padding: 8px;\n                border: 1px solid #ccc;\n                border-radius: 4px;\n                box-sizing: border-box;\n                font-size: 14px;\n                background: white;\n                margin: 0;\n            `;const b=o("button");b.textContent="非表示";b.style.cssText=`\n                padding: 0 12px;\n                height: 36px;\n                border: 1px solid #ccc;\n                border-radius: 4px;\n                background: white;\n                cursor: pointer;\n                font-size: 14px;\n                white-space: nowrap;\n                transition: all 0.2s ease;\n            `;b.addEventListener("mouseenter",(()=>{b.style.backgroundColor="#f0f0f0"}));b.addEventListener("mouseleave",(()=>{b.style.backgroundColor="white"}));b.addEventListener("click",(e=>{e.stopPropagation();const t=!h.disabled;h.disabled=t;if(t){h.value="";b.textContent="表示";h.style.backgroundColor="#f5f5f5";h.style.color="#999"}else{b.textContent="非表示";h.style.backgroundColor="white";h.style.color="black";const e=localStorage.getItem(`${n}-jsonUrl`);if(e){h.value=e}}}));const y=localStorage.getItem(`${n}-jsonUrl`);if(y){h.value=y}h.addEventListener("change",(()=>{const e=h.value.trim();if(e&&!h.disabled){localStorage.setItem(`${n}-jsonUrl`,e);t.debug(`[${n}]: Saved JSON URL to localStorage`)}else{localStorage.removeItem(`${n}-jsonUrl`);t.debug(`[${n}]: Removed JSON URL from localStorage`)}}));const f=o("button");f.type="button";f.innerHTML=`\n                <svg width="24" height="24" viewBox="0 0 24 24" fill="currentColor">\n                    <path d="M12 2C6.48 2 2 6.48 2 12s4.48 10 10 10 10-4.48 10-10S17.52 2 12 2zm1 17h-2v-2h2v2zm2.07-7.75l-.9.92C13.45 12.9 13 13.5 13 15h-2v-.5c0-1.1.45-2.1 1.17-2.83l1.24-1.26c.37-.36.59-.86.59-1.41 0-1.1-.9-2-2-2s-2 .9-2 2H8c0-2.21 1.79-4 4-4s4 1.79 4 4c0 .88-.36 1.68-.93 2.25z"/>\n                </svg>`;f.style.cssText=`\n                cursor: pointer;\n                flex-shrink: 0;\n                color: #666;\n                padding: 6px;\n                border-radius: 4px;\n                transition: all 0.2s ease;\n                height: 36px;\n                width: 36px;\n                display: flex;\n                align-items: center;\n                justify-content: center;\n                box-sizing: border-box;\n                border: 1px solid #ccc;\n                background: white;\n            `;f.addEventListener("mouseenter",(()=>{f.style.backgroundColor="#f0f0f0"}));f.addEventListener("mouseleave",(()=>{f.style.backgroundColor="white"}));const m=o("div");m.id=`${n}-help-modal`;m.style.cssText=`\n                display: none;\n                position: fixed;\n                top: 0;\n                left: 0;\n                width: 100dvw;\n                height: 100dvh;\n                background: rgba(0, 0, 0, 0.7);\n                z-index: 5050;\n                opacity: 0;\n                transition: opacity 0.3s ease;\n            `;const v=o("div");v.style.cssText=`\n                position: relative;\n                width: 90%;\n                max-width: 90%;\n                margin: 40px auto;\n                max-height: 90%;\n                height: auto;\n                background: white;\n                padding: 20px;\n                border-radius: 8px;\n                box-shadow: 0 2px 10px rgba(0,0,0,0.1);\n                transform: translateY(-20px);\n                transition: transform 0.3s ease;\n                overflow-y: scroll;\n            `;v.innerHTML=`\n                <h2 style="margin-top: 0; margin-bottom: 20px; color: #333;">投稿検索の使い方</h2>\n                <div style="color: #666; line-height: 1.6;">\n                    <h3 style="color: #333; margin: 16px 0 8px;">検索インターフェースの表示</h3>\n                    <p>ページ上の任意の場所をトリプルクリックすると、検索インターフェースの表示/非表示を切り替えられます。</p>\n\n                    <h3 style="color: #333; margin: 16px 0 8px;">JSONファイルの設定</h3>\n                    <ol>\n                        <li>投稿をJSONファイルとしてエクスポートし、アクセス可能な場所にホストします。Misskey内の自分のストレージ内でも構いません。</li>\n                        <li>入力フィールドにJSONファイルのURLを入力します</li>\n                        <li>URLは自動的に保存され、次回以降も使用できます</li>\n                    </ol>\n                    <h3 style="color: #333; margin: 16px 0 8px;">JSONフォーマット</h3>\n                    <p>JSONファイルは以下の構造を持つ投稿オブジェクトの配列である必要があります：</p>\n                    <pre style="background: #f5f5f5; padding: 10px; border-radius: 4px; overflow-x: auto;">[\n    {\n        "text": "投稿内容",\n        "createdAt": "2023-01-01T00:00:00.000Z"\n    },\n    ...\n]</pre>\n\n                    <h3 style="color: #333; margin: 16px 0 8px;">投稿の検索</h3>\n                    <ol>\n                    <li>検索ボックスに検索キーワードを入力します</li>\n                    <li>入力に応じて結果が自動的に更新されます</li>\n                    <li>結果は日付の降順で表示されます</li>\n                    </ol>\n                    <h3 style="color: #333; margin: 16px 0 8px;">URL入力オプション</h3>\n                    <p>非表示/表示ボタンを使用して、URL入力を一時的に無効にできます</p>\n                </div>\n                <button style="\n                    position: absolute;\n                    top: 10px;\n                    right: 10px;\n                    background: none;\n                    border: none;\n                    font-size: 24px;\n                    cursor: pointer;\n                    color: #666;\n                    padding: 5px;\n                    line-height: 1;\n                ">×</button>\n            `;const w=v.querySelector("button");w.addEventListener("click",(e=>{e.stopPropagation();m.style.opacity="0";v.style.transform="translateY(-20px)";setTimeout((()=>{m.style.display="none"}),300)}));const S=e=>{e.preventDefault();e.stopPropagation();m.style.display="block";requestAnimationFrame((()=>{m.style.opacity="1";v.style.transform="translateY(0)"}))};f.onclick=S;m.addEventListener("click",(e=>{if(e.target===m){w.click()}}));m.appendChild(v);document.body.appendChild(m);d.style.width="300px";g.appendChild(h);g.appendChild(b);g.appendChild(f);const L=o("input");L.type="text";L.placeholder="投稿を検索...";L.style.cssText=`\n                width: 100%;\n                padding: 8px;\n                margin-bottom: 10px;\n                border: 1px solid #ccc;\n                border-radius: 4px;\n                box-sizing: border-box;\n                font-size: 14px;\n                transition: all 0.3s ease;\n            `;const k=o("div");k.style.cssText=`\n                max-height: 400px;\n                overflow-y: auto;\n                font-size: 14px;\n                width: 100%;\n                box-sizing: border-box;\n                transition: all 0.3s ease;\n            `;d.appendChild(g);d.appendChild(L);d.appendChild(k);document.body.appendChild(d);async function a(e){if(!e){k.innerHTML="";return}try{t.debug(`[${n}]: Searching for: ${e}`);let o=null;const r=localStorage.getItem(`${n}-jsonUrl`);if(r){try{const e=await c(r);try{if(e.startsWith("<!DOCTYPE html>")||e.startsWith("<html>")){throw new Error("HTMLファイルが指定されています。JSONファイルを指定してください。")}o=JSON.parse(e);if(typeof o!=="object"){throw new Error("不正なJSONフォーマットです")}}catch(e){t.error(`[${n}]: JSON parse error:`,e);throw new Error("JSONファイルのパースに失敗しました。有効なJSONファイルを指定してください。")}t.debug(`[${n}]: Loaded and validated JSON data from URL`)}catch(e){t.error(`[${n}]: Error loading JSON:`,e);k.innerHTML=`<div style="color: red;">JSONの読み込みエラー: ${e.message}</div>`;return}}if(!o){throw new Error("検索するJSONファイルのURLを指定してください")}if(!Array.isArray(o)){throw new Error("JSONファイルは投稿データの配列である必要があります")}const i=o.filter((n=>{if(!n.text)return false;return n.text.toLowerCase().includes(e.toLowerCase())})).sort(((e,n)=>new Date(n.createdAt)-new Date(e.createdAt)));t.debug(`[${n}]: Found ${i.length} results`);k.innerHTML=i.map((e=>`\n                        <div style="margin-bottom: 10px; padding: 8px; border: 1px solid #eee; border-radius: 4px; background: white;">\n                            <div style="margin-bottom: 5px; color: #666; font-size: 12px;">\n                                ${new Date(e.createdAt).toLocaleString()}\n                            </div>\n                            <div style="white-space: pre-wrap; word-break: break-all;">${e.text||""}</div>\n                        </div>\n                    `)).join("");if(i.length===0){k.innerHTML='<div style="color: #666;">検索結果がありません</div>'}}catch(e){t.error(`[${n}]: Error searching posts:`,e);k.innerHTML=`<div style="color: red;">エラー: ${e.message}</div>`}}function l(e,n){let t;return function o(...r){const i=()=>{clearTimeout(t);e(...r)};clearTimeout(t);t=setTimeout(i,n)}}const $=l(a,300);L.addEventListener("input",(e=>$(e.target.value)));t.debug(`[${n}]: Search interface initialized`)}catch(C){t.error(`[${n}]: Script error:`,C)}}if(document.readyState==="loading"){document.addEventListener("DOMContentLoaded",l)}else{l()}const d=new MutationObserver((e=>{if(!r(`#${n}-search`)){t.debug(`[${n}]: Reinitializing search interface after navigation`);l()}}));d.observe(document.body,{childList:true,subtree:true});function c(e){return new Promise(((n,t)=>{GM_xmlhttpRequest({method:"GET",url:e,onload:e=>{if(e.status===200){n(e.responseText)}else{t(new Error(`ファイルの読み込みに失敗しました: ${e.status}`))}},onerror:()=>t(new Error("ファイルの読み込み中にエラーが発生しました"))})}))}})();
